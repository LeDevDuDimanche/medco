// Code generated by go-swagger; DO NOT EDIT.

package picsure2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/lca1/medco-connector/restapi/models"
)

// QueryStatusReader is a Reader for the QueryStatus structure.
type QueryStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewQueryStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewQueryStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQueryStatusOK creates a QueryStatusOK with default headers values
func NewQueryStatusOK() *QueryStatusOK {
	return &QueryStatusOK{}
}

/*QueryStatusOK handles this case with default header values.

Query status.
*/
type QueryStatusOK struct {
	Payload *models.QueryStatus
}

func (o *QueryStatusOK) Error() string {
	return fmt.Sprintf("[POST /picsure2/{queryId}/status][%d] queryStatusOK  %+v", 200, o.Payload)
}

func (o *QueryStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueryStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryStatusDefault creates a QueryStatusDefault with default headers values
func NewQueryStatusDefault(code int) *QueryStatusDefault {
	return &QueryStatusDefault{
		_statusCode: code,
	}
}

/*QueryStatusDefault handles this case with default header values.

Error response
*/
type QueryStatusDefault struct {
	_statusCode int

	Payload *QueryStatusDefaultBody
}

// Code gets the status code for the query status default response
func (o *QueryStatusDefault) Code() int {
	return o._statusCode
}

func (o *QueryStatusDefault) Error() string {
	return fmt.Sprintf("[POST /picsure2/{queryId}/status][%d] queryStatus default  %+v", o._statusCode, o.Payload)
}

func (o *QueryStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(QueryStatusDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*QueryStatusBody query status body
swagger:model QueryStatusBody
*/
type QueryStatusBody struct {

	// resource credentials
	ResourceCredentials *models.ResourceCredentials `json:"resourceCredentials,omitempty"`
}

// Validate validates this query status body
func (o *QueryStatusBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResourceCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *QueryStatusBody) validateResourceCredentials(formats strfmt.Registry) error {

	if swag.IsZero(o.ResourceCredentials) { // not required
		return nil
	}

	if o.ResourceCredentials != nil {
		if err := o.ResourceCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "resourceCredentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *QueryStatusBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *QueryStatusBody) UnmarshalBinary(b []byte) error {
	var res QueryStatusBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*QueryStatusDefaultBody query status default body
swagger:model QueryStatusDefaultBody
*/
type QueryStatusDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this query status default body
func (o *QueryStatusDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *QueryStatusDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *QueryStatusDefaultBody) UnmarshalBinary(b []byte) error {
	var res QueryStatusDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
