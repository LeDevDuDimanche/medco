// Code generated by go-swagger; DO NOT EDIT.

package picsure2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ldsec/medco-connector/restapi/models"
)

// QuerySyncReader is a Reader for the QuerySync structure.
type QuerySyncReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuerySyncReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQuerySyncOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewQuerySyncDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQuerySyncOK creates a QuerySyncOK with default headers values
func NewQuerySyncOK() *QuerySyncOK {
	return &QuerySyncOK{}
}

/*QuerySyncOK handles this case with default header values.

Query result.
*/
type QuerySyncOK struct {
	Payload *models.QueryResultElement
}

func (o *QuerySyncOK) Error() string {
	return fmt.Sprintf("[POST /query/sync][%d] querySyncOK  %+v", 200, o.Payload)
}

func (o *QuerySyncOK) GetPayload() *models.QueryResultElement {
	return o.Payload
}

func (o *QuerySyncOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueryResultElement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuerySyncDefault creates a QuerySyncDefault with default headers values
func NewQuerySyncDefault(code int) *QuerySyncDefault {
	return &QuerySyncDefault{
		_statusCode: code,
	}
}

/*QuerySyncDefault handles this case with default header values.

Error response
*/
type QuerySyncDefault struct {
	_statusCode int

	Payload *QuerySyncDefaultBody
}

// Code gets the status code for the query sync default response
func (o *QuerySyncDefault) Code() int {
	return o._statusCode
}

func (o *QuerySyncDefault) Error() string {
	return fmt.Sprintf("[POST /query/sync][%d] querySync default  %+v", o._statusCode, o.Payload)
}

func (o *QuerySyncDefault) GetPayload() *QuerySyncDefaultBody {
	return o.Payload
}

func (o *QuerySyncDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(QuerySyncDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*QuerySyncBody query sync body
swagger:model QuerySyncBody
*/
type QuerySyncBody struct {

	// query
	Query *models.Query `json:"query,omitempty"`

	// resource credentials
	ResourceCredentials *models.ResourceCredentials `json:"resourceCredentials,omitempty"`

	// resource UUID
	ResourceUUID string `json:"resourceUUID,omitempty"`
}

// Validate validates this query sync body
func (o *QuerySyncBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuery(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResourceCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *QuerySyncBody) validateQuery(formats strfmt.Registry) error {

	if swag.IsZero(o.Query) { // not required
		return nil
	}

	if o.Query != nil {
		if err := o.Query.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "query")
			}
			return err
		}
	}

	return nil
}

func (o *QuerySyncBody) validateResourceCredentials(formats strfmt.Registry) error {

	if swag.IsZero(o.ResourceCredentials) { // not required
		return nil
	}

	if o.ResourceCredentials != nil {
		if err := o.ResourceCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "resourceCredentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *QuerySyncBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *QuerySyncBody) UnmarshalBinary(b []byte) error {
	var res QuerySyncBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*QuerySyncDefaultBody query sync default body
swagger:model QuerySyncDefaultBody
*/
type QuerySyncDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this query sync default body
func (o *QuerySyncDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *QuerySyncDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *QuerySyncDefaultBody) UnmarshalBinary(b []byte) error {
	var res QuerySyncDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
