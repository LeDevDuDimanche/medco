// Code generated by go-swagger; DO NOT EDIT.

package medco_node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ldsec/medco-connector/restapi/models"
)

// NewExploreSearchModifierParams creates a new ExploreSearchModifierParams object
// with the default values initialized.
func NewExploreSearchModifierParams() *ExploreSearchModifierParams {
	var ()
	return &ExploreSearchModifierParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewExploreSearchModifierParamsWithTimeout creates a new ExploreSearchModifierParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewExploreSearchModifierParamsWithTimeout(timeout time.Duration) *ExploreSearchModifierParams {
	var ()
	return &ExploreSearchModifierParams{

		timeout: timeout,
	}
}

// NewExploreSearchModifierParamsWithContext creates a new ExploreSearchModifierParams object
// with the default values initialized, and the ability to set a context for a request
func NewExploreSearchModifierParamsWithContext(ctx context.Context) *ExploreSearchModifierParams {
	var ()
	return &ExploreSearchModifierParams{

		Context: ctx,
	}
}

// NewExploreSearchModifierParamsWithHTTPClient creates a new ExploreSearchModifierParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewExploreSearchModifierParamsWithHTTPClient(client *http.Client) *ExploreSearchModifierParams {
	var ()
	return &ExploreSearchModifierParams{
		HTTPClient: client,
	}
}

/*ExploreSearchModifierParams contains all the parameters to send to the API endpoint
for the explore search modifier operation typically these are written to a http.Request
*/
type ExploreSearchModifierParams struct {

	/*SearchModifierRequest
	  MedCo-Explore ontology search modifier request.

	*/
	SearchModifierRequest *models.ExploreSearchModifier

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the explore search modifier params
func (o *ExploreSearchModifierParams) WithTimeout(timeout time.Duration) *ExploreSearchModifierParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the explore search modifier params
func (o *ExploreSearchModifierParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the explore search modifier params
func (o *ExploreSearchModifierParams) WithContext(ctx context.Context) *ExploreSearchModifierParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the explore search modifier params
func (o *ExploreSearchModifierParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the explore search modifier params
func (o *ExploreSearchModifierParams) WithHTTPClient(client *http.Client) *ExploreSearchModifierParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the explore search modifier params
func (o *ExploreSearchModifierParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSearchModifierRequest adds the searchModifierRequest to the explore search modifier params
func (o *ExploreSearchModifierParams) WithSearchModifierRequest(searchModifierRequest *models.ExploreSearchModifier) *ExploreSearchModifierParams {
	o.SetSearchModifierRequest(searchModifierRequest)
	return o
}

// SetSearchModifierRequest adds the searchModifierRequest to the explore search modifier params
func (o *ExploreSearchModifierParams) SetSearchModifierRequest(searchModifierRequest *models.ExploreSearchModifier) {
	o.SearchModifierRequest = searchModifierRequest
}

// WriteToRequest writes these params to a swagger request
func (o *ExploreSearchModifierParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SearchModifierRequest != nil {
		if err := r.SetBodyParam(o.SearchModifierRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
