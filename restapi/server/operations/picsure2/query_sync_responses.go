// Code generated by go-swagger; DO NOT EDIT.

package picsure2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lca1/medco-connector/restapi/models"
)

// QuerySyncOKCode is the HTTP code returned for type QuerySyncOK
const QuerySyncOKCode int = 200

/*QuerySyncOK Query result.

swagger:response querySyncOK
*/
type QuerySyncOK struct {

	/*
	  In: Body
	*/
	Payload *models.QueryResultElement `json:"body,omitempty"`
}

// NewQuerySyncOK creates QuerySyncOK with default headers values
func NewQuerySyncOK() *QuerySyncOK {

	return &QuerySyncOK{}
}

// WithPayload adds the payload to the query sync o k response
func (o *QuerySyncOK) WithPayload(payload *models.QueryResultElement) *QuerySyncOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query sync o k response
func (o *QuerySyncOK) SetPayload(payload *models.QueryResultElement) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuerySyncOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*QuerySyncDefault Error response

swagger:response querySyncDefault
*/
type QuerySyncDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *QuerySyncDefaultBody `json:"body,omitempty"`
}

// NewQuerySyncDefault creates QuerySyncDefault with default headers values
func NewQuerySyncDefault(code int) *QuerySyncDefault {
	if code <= 0 {
		code = 500
	}

	return &QuerySyncDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the query sync default response
func (o *QuerySyncDefault) WithStatusCode(code int) *QuerySyncDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the query sync default response
func (o *QuerySyncDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the query sync default response
func (o *QuerySyncDefault) WithPayload(payload *QuerySyncDefaultBody) *QuerySyncDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query sync default response
func (o *QuerySyncDefault) SetPayload(payload *QuerySyncDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuerySyncDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
