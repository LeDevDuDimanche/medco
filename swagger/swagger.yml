swagger: "2.0"
info:
  description: "This is the API of the MedCo connector, that orchestrates the query at the MedCo node. It implements the PIC-SURE 2 API."
  version: "0.2.0"
  title: "MedCo Connector"
  contact:
    email: "medco-dev@listes.epfl.ch"
  license:
    name: "EULA"
    url: "https://raw.githubusercontent.com/lca1/medco-connector/master/LICENSE"
basePath: "/medco"
tags:
  - name: "picsure2"
    description: "PIC-SURE 2 Resource Service API"
schemes:
  - "https"
  - "http"
externalDocs:
  description: "MedCo Technical Documentation"
  url: "https://medco.epfl.ch/documentation"

paths:
  /picsure2/info:
    post:
      tags:
        - "picsure2"
      summary: "Returns information on how to interact with this PIC-SURE endpoint."
      description: ""
      operationId: "getInfo"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Credentials to be used."
          required: true
          schema:
            type: "object"
            properties:
              resourcesCredentials:
                $ref: "#/definitions/resourceCredentials"
      responses:
        200:
          description: "PIC-SURE 2 resource information."
          schema:
            $ref: "#/definitions/resourceInfo"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/search:
    post:
      tags:
        - "picsure2"
      summary: "Search through the ontology."
      operationId: "search"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Search request."
          required: true
          schema:
            type: "object"
            properties:
              resourcesCredentials:
                $ref: "#/definitions/resourceCredentials"
              query:
                $ref: "#/definitions/searchQuery"
              resourceUUID:
                type: "string"
      responses:
        200:
          description: "Search results."
          schema:
            type: "object"
            properties:
              searchQuery:
                type: "string"
              results:
                type: "object"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/query:
    post:
      tags:
        - "picsure2"
      summary: "Query MedCo node."
      operationId: "query"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Query request."
          required: true
          schema:
            type: "object"
            properties:
              resourcesCredentials:
                $ref: "#/definitions/resourceCredentials"
              query:
                $ref: "#/definitions/query"
              resourceUUID:
                type: "string"
      responses:
        200:
          description: "Query status."
          schema:
            $ref: "#/definitions/queryStatus"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/query/sync:
    post:
      tags:
        - "picsure2"
      summary: "Query MedCo node synchronously."
      operationId: "querySync"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Query request."
          required: true
          schema:
            type: "object"
            properties:
              resourcesCredentials:
                $ref: "#/definitions/resourceCredentials"
              query:
                $ref: "#/definitions/query"
              resourceUUID:
                type: "string"
      responses:
        200:
          description: "Query result."
          schema:
            $ref: "#/definitions/queryResult"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/{queryId}/status:
    post:
      tags:
        - "picsure2"
      summary: "Get status of query."
      operationId: "queryStatus"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "queryId"
          description: "Query ID"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Credentials to be used."
          required: true
          schema:
            type: "object"
            properties:
              resourcesCredentials:
                $ref: "#/definitions/resourceCredentials"
      responses:
        200:
          description: "Query status."
          schema:
            $ref: "#/definitions/queryStatus"
      security:
        - PICSURE2ResourceToken: []


  /picsure2/{queryId}/result:
    post:
      tags:
        - "picsure2"
      summary: "Get result of query."
      operationId: "queryResult"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "queryId"
          description: "Query ID"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Credentials to be used."
          required: true
          schema:
            type: "object"
            properties:
              resourcesCredentials:
                $ref: "#/definitions/resourceCredentials"
      responses:
        200:
          description: "Query result."
          schema:
            $ref: "#/definitions/queryResult"
      security:
        - PICSURE2ResourceToken: []

securityDefinitions:
  PICSURE2ResourceToken:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: "PICSURE 2 resource authorization (shared secret passed in headers)."

definitions:
  resourceCredentials:
    type: "object"
    properties:
      MEDCO_TOKEN:
        type: "string"
        description: "MedCo authorization token."

  resourceInfo:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      queryFormats:
        type: "array"
        items:
          $ref: '#/definitions/queryFormat'

  queryFormat:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      examples:
        type: "array"
        items:
          type: "object"
      specifications:
        type: "object"

  searchQuery:
    type: "object"

  query:
    type: "object"

  queryResult:
    type: "object"

  queryStatus:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - QUEUED
          - PENDING
          - ERROR
          - AVAILABLE
      resourceID:
        type: "string"
      resourceStatus:
        type: "string"
      picsureResultId:
        type: "string"
      resourceResultId:
        type: "string"
      resultMetadata:
        type: "string"
        format: "byte"
      sizeInBytes:
        type: "integer"
        format: "int64"
      startTime:
        type: "integer"
        format: "int64"
      duration:
        type: "integer"
        format: "int64"
      expiration:
        type: "integer"
        format: "int64"


