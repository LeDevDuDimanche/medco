swagger: "2.0"
info:
  description: "This is the API of the MedCo connector, that orchestrates the query at the MedCo node. It implements the PIC-SURE 2 API."
  version: "0.2.0"
  title: "MedCo Connector"
  contact:
    email: "medco-dev@listes.epfl.ch"
  license:
    name: "EULA"
    url: "https://raw.githubusercontent.com/lca1/medco-connector/master/LICENSE"
basePath: "/medco-connector"
tags:
  - name: "picsure2"
    description: "PIC-SURE 2 Resource Service API"
schemes:
  - "http"
externalDocs:
  description: "MedCo Technical Documentation"
  url: "https://medco.epfl.ch/documentation"

paths:
  /picsure2/info:
    post:
      tags:
        - "picsure2"
      summary: "Returns information on how to interact with this PIC-SURE endpoint."
      operationId: "getInfo"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Credentials to be used."
          required: true
          schema:
            type: "object"
            properties:
              resourceCredentials:
                $ref: "#/definitions/resourceCredentials"
      responses:
        200:
          $ref: "#/responses/resourceInfo"
        default:
          $ref: "#/responses/error"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/search:
    post:
      tags:
        - "picsure2"
      summary: "Search through the ontology."
      operationId: "search"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Search request."
          required: true
          schema:
            type: "object"
            properties:
              resourceCredentials:
                $ref: "#/definitions/resourceCredentials"
              query:
                $ref: "#/definitions/searchQuery"
              resourceUUID:
                type: "string"
      responses:
        200:
          $ref: "#/responses/searchResult"
        default:
          $ref: "#/responses/error"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/query:
    post:
      tags:
        - "picsure2"
      summary: "Query MedCo node."
      operationId: "query"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Query request."
          required: true
          schema:
            type: "object"
            properties:
              resourceCredentials:
                $ref: "#/definitions/resourceCredentials"
              query:
                $ref: "#/definitions/query"
              resourceUUID:
                type: "string"
      responses:
        200:
          $ref: "#/responses/queryStatus"
        default:
          $ref: "#/responses/error"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/query/sync:
    post:
      tags:
        - "picsure2"
      summary: "Query MedCo node synchronously."
      operationId: "querySync"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Query request."
          required: true
          schema:
            type: "object"
            properties:
              resourceCredentials:
                $ref: "#/definitions/resourceCredentials"
              query:
                $ref: "#/definitions/query"
              resourceUUID:
                type: "string"
      responses:
        200:
          $ref: "#/responses/queryResult"
        default:
          $ref: "#/responses/error"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/{queryId}/status:
    post:
      tags:
        - "picsure2"
      summary: "Get status of query."
      operationId: "queryStatus"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "queryId"
          description: "Query ID"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Credentials to be used."
          required: true
          schema:
            type: "object"
            properties:
              resourceCredentials:
                $ref: "#/definitions/resourceCredentials"
      responses:
        200:
          $ref: "#/responses/queryStatus"
        default:
          $ref: "#/responses/error"
      security:
        - PICSURE2ResourceToken: []

  /picsure2/{queryId}/result:
    post:
      tags:
        - "picsure2"
      summary: "Get result of query."
      operationId: "queryResult"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "queryId"
          description: "Query ID"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Credentials to be used."
          required: true
          schema:
            type: "object"
            properties:
              resourceCredentials:
                $ref: "#/definitions/resourceCredentials"
      responses:
        200:
          $ref: "#/responses/queryResult"
        default:
          $ref: "#/responses/error"
      security:
        - PICSURE2ResourceToken: []

securityDefinitions:
  PICSURE2ResourceToken:
    type: "oauth2"
    flow: "password"
    tokenUrl: "http://test.com/asdasd"
    description: "PICSURE 2 resource authorization (shared secret passed in headers)."

responses:
  error:
    description: "Error response"
    schema:
      type: "object"
      properties:
        message:
          type: "string"

  resourceInfo:
    description: "PIC-SURE 2 resource information."
    schema:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        queryFormats:
          type: "array"
          items:
            type: "object"
            properties:
              name:
                type: "string"
              description:
                type: "string"
              examples:
                type: "array"
                items:
                  type: "object"
              specifications:
                type: "object"

  searchResult:
    description: "Search results."
    schema:
      type: "object"
      properties:
        searchQuery:
          type: "string"
        results:
          type: "array"
          items:
            $ref: "#/definitions/searchResultElement"

  queryStatus:
    description: "Query status."
    schema:
      $ref: "#/definitions/queryStatus"

  queryResult:
    description: "Query result."
    schema:
      $ref: "#/definitions/queryResultElement"

definitions:
  resourceCredentials:
    type: "object"
    properties:
      MEDCO_TOKEN:
        type: "string"
        description: "MedCo authorization token."

  searchQuery:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
          - children
          - metadata
      path:
        type: "string"

  searchResultElement:
    type: "object"
    properties:
      path:
        type: "string"
      name:
        type: "string"
      displayName:
        type: "string"
      code:
        type: "string"
      valueType:
        type: "string"
        enum:
          - none
          - numeric
          - enum
          - text
          - genomic_annotation
      medcoEncryption:
        type: "object"
        properties:
          encrypted:
            type: "boolean"
          id:
            type: "integer"
            format: "int64"
          childrenIds:
            type: "array"
            items:
              type: "integer"
              format: "int64"
          type:
            type: "string"
            enum:
              - CONCEPT_PARENT_NODE
              - CONCEPT_INTERNAL_NODE
              - CONCEPT_LEAF
      metadata:
        type: "object"

  query:
    type: "object"
    properties:
      i2b2-medco:
        type: "object"
        description: "i2b2-medco query"
        properties:
          select:
            type: "array"
            items:
              type: "string"
              enum:
                - count
                - patient_list
          panels:
            type: "array"
            description: "i2b2 panels (linked by an AND)"
            items:
              type: "object"
              properties:
                not:
                  type: "boolean"
                  description: "exclude the i2b2 panel"
                items:
                  type: "array"
                  description: "i2b2 items (linked by an OR)"
                  items:
                    type: "object"
                    properties:
                      queryTerm:
                        type: "string"
                      operator:
                        type: "string"
                        enum:
                          - exists
                          - equals
                      value:
                        type: "string"
                      encrypted:
                        type: "boolean"
          userPublicKey:
            type: "string"
      genomic-annotations:
        type: "object"
        description: "genomic annotations query (todo)"

  queryResultElement:
    type: "object"
    properties:
      encryptedCount:
        type: "string"
      encryptionKey:
        type: "string"
      patientList:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"

  queryStatus:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - QUEUED
          - PENDING
          - ERROR
          - AVAILABLE
      resourceID:
        type: "string"
      resourceStatus:
        type: "string"
      picsureResultId:
        type: "string"
      resourceResultId:
        type: "string"
      resultMetadata:
        type: "string"
        format: "byte"
      sizeInBytes:
        type: "integer"
        format: "int64"
      startTime:
        type: "integer"
        format: "int64"
      duration:
        type: "integer"
        format: "int64"
      expiration:
        type: "integer"
        format: "int64"