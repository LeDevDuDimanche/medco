// Code generated by go-swagger; DO NOT EDIT.

package picsure2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/lca1/medco-connector/swagger/models"
)

// GetInfoReader is a Reader for the GetInfo structure.
type GetInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetInfoOK creates a GetInfoOK with default headers values
func NewGetInfoOK() *GetInfoOK {
	return &GetInfoOK{}
}

/*GetInfoOK handles this case with default header values.

PIC-SURE 2 resource information.
*/
type GetInfoOK struct {
	Payload *GetInfoOKBody
}

func (o *GetInfoOK) Error() string {
	return fmt.Sprintf("[POST /picsure2/info][%d] getInfoOK  %+v", 200, o.Payload)
}

func (o *GetInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoDefault creates a GetInfoDefault with default headers values
func NewGetInfoDefault(code int) *GetInfoDefault {
	return &GetInfoDefault{
		_statusCode: code,
	}
}

/*GetInfoDefault handles this case with default header values.

Error response
*/
type GetInfoDefault struct {
	_statusCode int

	Payload *GetInfoDefaultBody
}

// Code gets the status code for the get info default response
func (o *GetInfoDefault) Code() int {
	return o._statusCode
}

func (o *GetInfoDefault) Error() string {
	return fmt.Sprintf("[POST /picsure2/info][%d] getInfo default  %+v", o._statusCode, o.Payload)
}

func (o *GetInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetInfoDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetInfoBody get info body
swagger:model GetInfoBody
*/
type GetInfoBody struct {

	// resource credentials
	ResourceCredentials *models.ResourceCredentials `json:"resourceCredentials,omitempty"`
}

// Validate validates this get info body
func (o *GetInfoBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResourceCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInfoBody) validateResourceCredentials(formats strfmt.Registry) error {

	if swag.IsZero(o.ResourceCredentials) { // not required
		return nil
	}

	if o.ResourceCredentials != nil {
		if err := o.ResourceCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "resourceCredentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetInfoBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInfoBody) UnmarshalBinary(b []byte) error {
	var res GetInfoBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInfoDefaultBody get info default body
swagger:model GetInfoDefaultBody
*/
type GetInfoDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get info default body
func (o *GetInfoDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetInfoDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInfoDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetInfoDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInfoOKBody get info o k body
swagger:model GetInfoOKBody
*/
type GetInfoOKBody struct {

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// query formats
	QueryFormats []*QueryFormatsItems0 `json:"queryFormats"`
}

// Validate validates this get info o k body
func (o *GetInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQueryFormats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInfoOKBody) validateQueryFormats(formats strfmt.Registry) error {

	if swag.IsZero(o.QueryFormats) { // not required
		return nil
	}

	for i := 0; i < len(o.QueryFormats); i++ {
		if swag.IsZero(o.QueryFormats[i]) { // not required
			continue
		}

		if o.QueryFormats[i] != nil {
			if err := o.QueryFormats[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getInfoOK" + "." + "queryFormats" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInfoOKBody) UnmarshalBinary(b []byte) error {
	var res GetInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*QueryFormatsItems0 query formats items0
swagger:model QueryFormatsItems0
*/
type QueryFormatsItems0 struct {

	// description
	Description string `json:"description,omitempty"`

	// examples
	Examples []interface{} `json:"examples"`

	// name
	Name string `json:"name,omitempty"`

	// specifications
	Specifications interface{} `json:"specifications,omitempty"`
}

// Validate validates this query formats items0
func (o *QueryFormatsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *QueryFormatsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *QueryFormatsItems0) UnmarshalBinary(b []byte) error {
	var res QueryFormatsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
