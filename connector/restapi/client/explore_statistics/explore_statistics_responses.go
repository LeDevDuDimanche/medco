// Code generated by go-swagger; DO NOT EDIT.

package explore_statistics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExploreStatisticsReader is a Reader for the ExploreStatistics structure.
type ExploreStatisticsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExploreStatisticsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExploreStatisticsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExploreStatisticsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExploreStatisticsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewExploreStatisticsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExploreStatisticsOK creates a ExploreStatisticsOK with default headers values
func NewExploreStatisticsOK() *ExploreStatisticsOK {
	return &ExploreStatisticsOK{}
}

/*ExploreStatisticsOK handles this case with default header values.

Explore statistics histogram
*/
type ExploreStatisticsOK struct {
	Payload *ExploreStatisticsOKBody
}

func (o *ExploreStatisticsOK) Error() string {
	return fmt.Sprintf("[POST /node/explore-statistics/query][%d] exploreStatisticsOK  %+v", 200, o.Payload)
}

func (o *ExploreStatisticsOK) GetPayload() *ExploreStatisticsOKBody {
	return o.Payload
}

func (o *ExploreStatisticsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExploreStatisticsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExploreStatisticsBadRequest creates a ExploreStatisticsBadRequest with default headers values
func NewExploreStatisticsBadRequest() *ExploreStatisticsBadRequest {
	return &ExploreStatisticsBadRequest{}
}

/*ExploreStatisticsBadRequest handles this case with default header values.

Bad user input in request.
*/
type ExploreStatisticsBadRequest struct {
	Payload *ExploreStatisticsBadRequestBody
}

func (o *ExploreStatisticsBadRequest) Error() string {
	return fmt.Sprintf("[POST /node/explore-statistics/query][%d] exploreStatisticsBadRequest  %+v", 400, o.Payload)
}

func (o *ExploreStatisticsBadRequest) GetPayload() *ExploreStatisticsBadRequestBody {
	return o.Payload
}

func (o *ExploreStatisticsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExploreStatisticsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExploreStatisticsNotFound creates a ExploreStatisticsNotFound with default headers values
func NewExploreStatisticsNotFound() *ExploreStatisticsNotFound {
	return &ExploreStatisticsNotFound{}
}

/*ExploreStatisticsNotFound handles this case with default header values.

Not found.
*/
type ExploreStatisticsNotFound struct {
	Payload *ExploreStatisticsNotFoundBody
}

func (o *ExploreStatisticsNotFound) Error() string {
	return fmt.Sprintf("[POST /node/explore-statistics/query][%d] exploreStatisticsNotFound  %+v", 404, o.Payload)
}

func (o *ExploreStatisticsNotFound) GetPayload() *ExploreStatisticsNotFoundBody {
	return o.Payload
}

func (o *ExploreStatisticsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExploreStatisticsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExploreStatisticsDefault creates a ExploreStatisticsDefault with default headers values
func NewExploreStatisticsDefault(code int) *ExploreStatisticsDefault {
	return &ExploreStatisticsDefault{
		_statusCode: code,
	}
}

/*ExploreStatisticsDefault handles this case with default header values.

Error response.
*/
type ExploreStatisticsDefault struct {
	_statusCode int

	Payload *ExploreStatisticsDefaultBody
}

// Code gets the status code for the explore statistics default response
func (o *ExploreStatisticsDefault) Code() int {
	return o._statusCode
}

func (o *ExploreStatisticsDefault) Error() string {
	return fmt.Sprintf("[POST /node/explore-statistics/query][%d] exploreStatistics default  %+v", o._statusCode, o.Payload)
}

func (o *ExploreStatisticsDefault) GetPayload() *ExploreStatisticsDefaultBody {
	return o.Payload
}

func (o *ExploreStatisticsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExploreStatisticsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ExploreStatisticsBadRequestBody explore statistics bad request body
swagger:model ExploreStatisticsBadRequestBody
*/
type ExploreStatisticsBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this explore statistics bad request body
func (o *ExploreStatisticsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExploreStatisticsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreStatisticsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ExploreStatisticsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExploreStatisticsBody explore statistics body
swagger:model ExploreStatisticsBody
*/
type ExploreStatisticsBody struct {

	// ID
	// Pattern: ^[\w:-]+$
	ID string `json:"ID,omitempty"`

	// cohort name
	// Pattern: ^\w+$
	CohortName string `json:"cohortName,omitempty"`

	// concept
	// Pattern: ^\/$|^((\/[^\/]+)+\/?)$
	Concept string `json:"concept,omitempty"`

	// max bound
	MaxBound float64 `json:"maxBound,omitempty"`

	// min bound
	MinBound float64 `json:"minBound,omitempty"`

	// modifier
	Modifier *ExploreStatisticsParamsBodyModifier `json:"modifier,omitempty"`

	// number of buckets
	NumberOfBuckets int64 `json:"numberOfBuckets,omitempty"`

	// user public key
	// Pattern: ^[\w=-]+$
	UserPublicKey string `json:"userPublicKey,omitempty"`
}

// Validate validates this explore statistics body
func (o *ExploreStatisticsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCohortName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateConcept(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateModifier(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUserPublicKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ExploreStatisticsBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"ID", "body", string(o.ID), `^[\w:-]+$`); err != nil {
		return err
	}

	return nil
}

func (o *ExploreStatisticsBody) validateCohortName(formats strfmt.Registry) error {

	if swag.IsZero(o.CohortName) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"cohortName", "body", string(o.CohortName), `^\w+$`); err != nil {
		return err
	}

	return nil
}

func (o *ExploreStatisticsBody) validateConcept(formats strfmt.Registry) error {

	if swag.IsZero(o.Concept) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"concept", "body", string(o.Concept), `^\/$|^((\/[^\/]+)+\/?)$`); err != nil {
		return err
	}

	return nil
}

func (o *ExploreStatisticsBody) validateModifier(formats strfmt.Registry) error {

	if swag.IsZero(o.Modifier) { // not required
		return nil
	}

	if o.Modifier != nil {
		if err := o.Modifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "modifier")
			}
			return err
		}
	}

	return nil
}

func (o *ExploreStatisticsBody) validateUserPublicKey(formats strfmt.Registry) error {

	if swag.IsZero(o.UserPublicKey) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"userPublicKey", "body", string(o.UserPublicKey), `^[\w=-]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ExploreStatisticsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreStatisticsBody) UnmarshalBinary(b []byte) error {
	var res ExploreStatisticsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExploreStatisticsDefaultBody explore statistics default body
swagger:model ExploreStatisticsDefaultBody
*/
type ExploreStatisticsDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this explore statistics default body
func (o *ExploreStatisticsDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExploreStatisticsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreStatisticsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ExploreStatisticsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExploreStatisticsNotFoundBody explore statistics not found body
swagger:model ExploreStatisticsNotFoundBody
*/
type ExploreStatisticsNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this explore statistics not found body
func (o *ExploreStatisticsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExploreStatisticsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreStatisticsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ExploreStatisticsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExploreStatisticsOKBody explore statistics o k body
swagger:model ExploreStatisticsOKBody
*/
type ExploreStatisticsOKBody struct {

	// the encrypted counts of each bucket of the histogram
	Results []string `json:"results"`

	// unit
	Unit string `json:"unit,omitempty"`
}

// Validate validates this explore statistics o k body
func (o *ExploreStatisticsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExploreStatisticsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreStatisticsOKBody) UnmarshalBinary(b []byte) error {
	var res ExploreStatisticsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExploreStatisticsParamsBodyModifier explore statistics params body modifier
swagger:model ExploreStatisticsParamsBodyModifier
*/
type ExploreStatisticsParamsBodyModifier struct {

	// applied path
	// Required: true
	// Pattern: ^((\/[^\/]+)+\/%?)$
	AppliedPath *string `json:"appliedPath"`

	// modifier key
	// Required: true
	// Pattern: ^((\/[^\/]+)+\/)$
	ModifierKey *string `json:"modifierKey"`
}

// Validate validates this explore statistics params body modifier
func (o *ExploreStatisticsParamsBodyModifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAppliedPath(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateModifierKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ExploreStatisticsParamsBodyModifier) validateAppliedPath(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"modifier"+"."+"appliedPath", "body", o.AppliedPath); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"modifier"+"."+"appliedPath", "body", string(*o.AppliedPath), `^((\/[^\/]+)+\/%?)$`); err != nil {
		return err
	}

	return nil
}

func (o *ExploreStatisticsParamsBodyModifier) validateModifierKey(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"modifier"+"."+"modifierKey", "body", o.ModifierKey); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"modifier"+"."+"modifierKey", "body", string(*o.ModifierKey), `^((\/[^\/]+)+\/)$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ExploreStatisticsParamsBodyModifier) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreStatisticsParamsBodyModifier) UnmarshalBinary(b []byte) error {
	var res ExploreStatisticsParamsBodyModifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
