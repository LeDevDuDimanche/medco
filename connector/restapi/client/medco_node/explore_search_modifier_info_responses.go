// Code generated by go-swagger; DO NOT EDIT.

package medco_node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ldsec/medco/connector/restapi/models"
)

// ExploreSearchModifierInfoReader is a Reader for the ExploreSearchModifierInfo structure.
type ExploreSearchModifierInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExploreSearchModifierInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExploreSearchModifierInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewExploreSearchModifierInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExploreSearchModifierInfoOK creates a ExploreSearchModifierInfoOK with default headers values
func NewExploreSearchModifierInfoOK() *ExploreSearchModifierInfoOK {
	return &ExploreSearchModifierInfoOK{}
}

/*ExploreSearchModifierInfoOK handles this case with default header values.

MedCo-Explore search modifier info query response.
*/
type ExploreSearchModifierInfoOK struct {
	Payload *ExploreSearchModifierInfoOKBody
}

func (o *ExploreSearchModifierInfoOK) Error() string {
	return fmt.Sprintf("[POST /node/explore/search/modifier-info][%d] exploreSearchModifierInfoOK  %+v", 200, o.Payload)
}

func (o *ExploreSearchModifierInfoOK) GetPayload() *ExploreSearchModifierInfoOKBody {
	return o.Payload
}

func (o *ExploreSearchModifierInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExploreSearchModifierInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExploreSearchModifierInfoDefault creates a ExploreSearchModifierInfoDefault with default headers values
func NewExploreSearchModifierInfoDefault(code int) *ExploreSearchModifierInfoDefault {
	return &ExploreSearchModifierInfoDefault{
		_statusCode: code,
	}
}

/*ExploreSearchModifierInfoDefault handles this case with default header values.

Error response.
*/
type ExploreSearchModifierInfoDefault struct {
	_statusCode int

	Payload *ExploreSearchModifierInfoDefaultBody
}

// Code gets the status code for the explore search modifier info default response
func (o *ExploreSearchModifierInfoDefault) Code() int {
	return o._statusCode
}

func (o *ExploreSearchModifierInfoDefault) Error() string {
	return fmt.Sprintf("[POST /node/explore/search/modifier-info][%d] exploreSearchModifierInfo default  %+v", o._statusCode, o.Payload)
}

func (o *ExploreSearchModifierInfoDefault) GetPayload() *ExploreSearchModifierInfoDefaultBody {
	return o.Payload
}

func (o *ExploreSearchModifierInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExploreSearchModifierInfoDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ExploreSearchModifierInfoDefaultBody explore search modifier info default body
swagger:model ExploreSearchModifierInfoDefaultBody
*/
type ExploreSearchModifierInfoDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this explore search modifier info default body
func (o *ExploreSearchModifierInfoDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExploreSearchModifierInfoDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreSearchModifierInfoDefaultBody) UnmarshalBinary(b []byte) error {
	var res ExploreSearchModifierInfoDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExploreSearchModifierInfoOKBody explore search modifier info o k body
swagger:model ExploreSearchModifierInfoOKBody
*/
type ExploreSearchModifierInfoOKBody struct {

	// results
	Results []*models.ExploreSearchResultElement `json:"results"`

	// search
	Search *models.ExploreSearchModifierInfo `json:"search,omitempty"`
}

// Validate validates this explore search modifier info o k body
func (o *ExploreSearchModifierInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResults(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSearch(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ExploreSearchModifierInfoOKBody) validateResults(formats strfmt.Registry) error {

	if swag.IsZero(o.Results) { // not required
		return nil
	}

	for i := 0; i < len(o.Results); i++ {
		if swag.IsZero(o.Results[i]) { // not required
			continue
		}

		if o.Results[i] != nil {
			if err := o.Results[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("exploreSearchModifierInfoOK" + "." + "results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ExploreSearchModifierInfoOKBody) validateSearch(formats strfmt.Registry) error {

	if swag.IsZero(o.Search) { // not required
		return nil
	}

	if o.Search != nil {
		if err := o.Search.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("exploreSearchModifierInfoOK" + "." + "search")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ExploreSearchModifierInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreSearchModifierInfoOKBody) UnmarshalBinary(b []byte) error {
	var res ExploreSearchModifierInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
