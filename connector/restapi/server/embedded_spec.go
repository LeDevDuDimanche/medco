// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API of the MedCo connector, that orchestrates the query at the MedCo node and provides information about the MedCo network.",
    "title": "MedCo Connector",
    "contact": {
      "email": "medco@epfl.ch"
    },
    "license": {
      "name": "EULA",
      "url": "https://raw.githubusercontent.com/ldsec/medco-connector/master/LICENSE"
    },
    "version": "1.0.0"
  },
  "basePath": "/medco",
  "paths": {
    "/genomic-annotations/{annotation}": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-genomic-annotations"
            ]
          }
        ],
        "tags": [
          "genomic-annotations"
        ],
        "summary": "Get genomic annotations values.",
        "operationId": "getValues",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Genomic annotation name.",
            "name": "annotation",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 255,
            "type": "string",
            "description": "Genomic annotation value.",
            "name": "value",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Limits the number of records retrieved.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Queried annotation values.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Annotation not found."
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/genomic-annotations/{annotation}/{value}": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-genomic-annotations"
            ]
          }
        ],
        "tags": [
          "genomic-annotations"
        ],
        "summary": "Get variants corresponding to a genomic annotation value.",
        "operationId": "getVariants",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Genomic annotation name.",
            "name": "annotation",
            "in": "path",
            "required": true
          },
          {
            "minLength": 1,
            "type": "string",
            "description": "Genomic annotation value.",
            "name": "value",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "heterozygous",
                "homozygous",
                "unknown"
              ],
              "type": "string"
            },
            "description": "Genomic annotation zygosity, if null defaults to all.",
            "name": "zygosity",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Request pre-encrypted variant identifiers (defaults to true).",
            "name": "encrypted",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Queried variants.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Annotation or annotation value not found."
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/network": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-network"
            ]
          }
        ],
        "tags": [
          "medco-network"
        ],
        "summary": "Get network metadata.",
        "operationId": "getMetadata",
        "responses": {
          "200": {
            "$ref": "#/responses/networkMetadataResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/analysis/survival/query": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-survival-analysis"
            ]
          }
        ],
        "tags": [
          "survival-analysis"
        ],
        "summary": "Send a query to run a survival analysis",
        "operationId": "survivalAnalysis",
        "parameters": [
          {
            "$ref": "#/parameters/survivalAnalysisRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/survivalAnalysisResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/cohorts": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Retrieve cohort names and patient set IDs",
        "operationId": "getCohorts",
        "parameters": [
          {
            "type": "integer",
            "default": 10,
            "description": "Limits the number of records retrieved. If the provided value is 0, there is no limit.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getCohortsResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/cohorts/{name}": {
      "put": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Update a cohort",
        "operationId": "putCohorts",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Name of the cohort to update",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/cohortsRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated cohort"
          },
          "400": {
            "$ref": "#/responses/badRequestResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundResponse"
          },
          "409": {
            "$ref": "#/responses/conflictResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Add a new cohort",
        "operationId": "postCohorts",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Name of the cohort to update",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/cohortsRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated cohort"
          },
          "400": {
            "$ref": "#/responses/badRequestResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundResponse"
          },
          "409": {
            "$ref": "#/responses/conflictResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Delete a cohort if it exists",
        "operationId": "deleteCohorts",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Name of the cohort to delete",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted cohort"
          },
          "404": {
            "$ref": "#/responses/notFoundResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/query": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "MedCo-Explore query to the node.",
        "operationId": "exploreQuery",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "description": "Request synchronous query (defaults to true).",
            "name": "sync",
            "in": "query"
          },
          {
            "$ref": "#/parameters/exploreQueryRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/exploreQueryResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/query/{queryId}": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Get status and result of a MedCo-Explore query.",
        "operationId": "getExploreQuery",
        "parameters": [
          {
            "type": "string",
            "description": "Query ID",
            "name": "queryId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/exploreQueryResponse"
          },
          "404": {
            "description": "Query ID not found."
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/search/concept-children": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the concept children (both concepts and modifiers)",
        "operationId": "exploreSearchConceptChildren",
        "parameters": [
          {
            "$ref": "#/parameters/exploreSearchConceptChildrenRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/exploreSearchConceptChildrenResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/search/concept-info": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the concept info",
        "operationId": "exploreSearchConceptInfo",
        "parameters": [
          {
            "$ref": "#/parameters/exploreSearchConceptInfoRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/exploreSearchConceptInfoResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/search/modifier-children": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the modifier children",
        "operationId": "exploreSearchModifierChildren",
        "parameters": [
          {
            "$ref": "#/parameters/exploreSearchModifierChildrenRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/exploreSearchModifierChildrenResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/node/explore/search/modifier-info": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the modifier info",
        "operationId": "exploreSearchModifierInfo",
        "parameters": [
          {
            "$ref": "#/parameters/exploreSearchModifierInfoRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/exploreSearchModifierInfoResponse"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "UnitValues": {
      "type": "object",
      "properties": {
        "ConvertingUnits": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "MultiplyingFactor": {
                "type": "string"
              },
              "Units": {
                "type": "string"
              }
            }
          }
        },
        "EqualUnits": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ExcludingUnits": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NormalUnits": {
          "type": "string"
        }
      }
    },
    "constrainByValue": {
      "type": "object",
      "required": [
        "operator",
        "value"
      ],
      "properties": {
        "operator": {
          "description": "EQ: equals NE: not equals GT: greater than GE: greater than or equal LT: less than LE: less than or equal IN: contained in BETWEEN: between\n",
          "type": "string",
          "enum": [
            "EQ",
            "NE",
            "GT",
            "GE",
            "LT",
            "LE",
            "IN",
            "BETWEEN"
          ]
        },
        "value": {
          "type": "string"
        }
      }
    },
    "exploreQuery": {
      "description": "MedCo-Explore query",
      "properties": {
        "panels": {
          "description": "i2b2 panels (linked by an AND)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/panel"
          }
        },
        "queryTiming": {
          "$ref": "#/definitions/timing"
        },
        "userPublicKey": {
          "type": "string",
          "pattern": "^[\\w=-]+$"
        }
      }
    },
    "exploreQueryResultElement": {
      "type": "object",
      "properties": {
        "encryptedCount": {
          "type": "string"
        },
        "encryptedPatientList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "patientSetID": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": [
            "queued",
            "pending",
            "error",
            "available"
          ]
        },
        "timers": {
          "$ref": "#/definitions/timers"
        }
      }
    },
    "exploreQueryType": {
      "type": "string",
      "enum": [
        "patient_list",
        "count_per_site",
        "count_per_site_obfuscated",
        "count_per_site_shuffled",
        "count_per_site_shuffled_obfuscated",
        "count_global",
        "count_global_obfuscated"
      ]
    },
    "exploreSearchConceptChildren": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchConceptInfo": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchModifierChildren": {
      "type": "object",
      "required": [
        "path",
        "appliedPath",
        "appliedConcept"
      ],
      "properties": {
        "appliedConcept": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        },
        "appliedPath": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/%?)$"
        },
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchModifierInfo": {
      "type": "object",
      "required": [
        "path",
        "appliedPath"
      ],
      "properties": {
        "appliedPath": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/%?)$"
        },
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchResultElement": {
      "type": "object",
      "required": [
        "leaf"
      ],
      "properties": {
        "appliedPath": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "leaf": {
          "type": "boolean"
        },
        "medcoEncryption": {
          "type": "object",
          "required": [
            "encrypted",
            "id"
          ],
          "properties": {
            "childrenIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "encrypted": {
              "type": "boolean"
            },
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/metadataxml"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "concept",
            "concept_container",
            "concept_folder",
            "modifier",
            "modifier_container",
            "modifier_folder",
            "genomic_annotation"
          ]
        }
      }
    },
    "metadataxml": {
      "type": "object",
      "properties": {
        "ValueMetadata": {
          "type": "object",
          "properties": {
            "ChildrenEncryptIDs": {
              "type": "string"
            },
            "CreationDateTime": {
              "type": "string"
            },
            "DataType": {
              "type": "string"
            },
            "EncryptedType": {
              "type": "string"
            },
            "EnumValues": {
              "type": "string"
            },
            "Flagstouse": {
              "type": "string"
            },
            "NodeEncryptID": {
              "type": "string"
            },
            "Oktousevalues": {
              "type": "string"
            },
            "TestID": {
              "type": "string"
            },
            "TestName": {
              "type": "string"
            },
            "UnitValues": {
              "$ref": "#/definitions/UnitValues"
            },
            "Version": {
              "type": "string"
            }
          }
        }
      }
    },
    "panel": {
      "type": "object",
      "required": [
        "not"
      ],
      "properties": {
        "items": {
          "description": "i2b2 items (linked by an OR)",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "encrypted",
              "queryTerm"
            ],
            "properties": {
              "constrainByValue": {
                "$ref": "#/definitions/constrainByValue"
              },
              "encrypted": {
                "type": "boolean"
              },
              "modifier": {
                "type": "object",
                "required": [
                  "appliedPath",
                  "modifierKey"
                ],
                "properties": {
                  "appliedPath": {
                    "type": "string",
                    "pattern": "^((\\/[^\\/]+)+\\/%?)$"
                  },
                  "constrainByValue": {
                    "$ref": "#/definitions/constrainByValue"
                  },
                  "modifierKey": {
                    "type": "string",
                    "pattern": "^((\\/[^\\/]+)+\\/)$"
                  }
                }
              },
              "queryTerm": {
                "type": "string",
                "pattern": "^([\\w=-]+)$|^((\\/[^\\/]+)+\\/)$"
              }
            }
          }
        },
        "not": {
          "description": "exclude the i2b2 panel",
          "type": "boolean"
        },
        "panelTiming": {
          "$ref": "#/definitions/timing"
        }
      }
    },
    "restApiAuthorization": {
      "type": "string",
      "enum": [
        "medco-network",
        "medco-explore",
        "medco-genomic-annotations",
        "medco-survival-analysis"
      ]
    },
    "timers": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "milliseconds"
        ],
        "properties": {
          "milliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "timing": {
      "type": "string",
      "default": "any",
      "enum": [
        "any",
        "samevisit",
        "sameinstancenum"
      ]
    },
    "user": {
      "type": "object",
      "properties": {
        "authorizations": {
          "type": "object",
          "properties": {
            "exploreQuery": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exploreQueryType"
              }
            },
            "restApi": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/restApiAuthorization"
              }
            }
          }
        },
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "cohortsRequest": {
      "description": "Cohort that has been updated or created",
      "name": "cohortRequest",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "patientSetID",
          "creationDate",
          "updateDate"
        ],
        "properties": {
          "creationDate": {
            "type": "string"
          },
          "patientSetID": {
            "type": "integer"
          },
          "updateDate": {
            "type": "string"
          }
        }
      }
    },
    "exploreQueryRequest": {
      "description": "MedCo-Explore query request.",
      "name": "queryRequest",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[\\w:-]+$"
          },
          "query": {
            "$ref": "#/definitions/exploreQuery"
          }
        }
      }
    },
    "exploreSearchConceptChildrenRequest": {
      "description": "MedCo-Explore ontology search concept children request.",
      "name": "searchConceptChildrenRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchConceptChildren"
      }
    },
    "exploreSearchConceptInfoRequest": {
      "description": "MedCo-Explore ontology search concept info request.",
      "name": "searchConceptInfoRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchConceptInfo"
      }
    },
    "exploreSearchModifierChildrenRequest": {
      "description": "MedCo-Explore ontology search modifier children request.",
      "name": "searchModifierChildrenRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchModifierChildren"
      }
    },
    "exploreSearchModifierInfoRequest": {
      "description": "MedCo-Explore ontology search modifier info request.",
      "name": "searchModifierInfoRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchModifierInfo"
      }
    },
    "survivalAnalysisRequest": {
      "description": "User public key, patient list and time codes strings for the survival analysis",
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "ID",
          "userPublicKey",
          "cohortName",
          "timeLimit",
          "timeGranularity",
          "startConcept",
          "startModifier",
          "endConcept",
          "endModifier"
        ],
        "properties": {
          "ID": {
            "type": "string",
            "pattern": "^[\\w:-]+$"
          },
          "cohortName": {
            "type": "string",
            "pattern": "^\\w+$"
          },
          "endConcept": {
            "type": "string",
            "pattern": "^\\/$|^((\\/[^\\/]+)+\\/?)$"
          },
          "endModifier": {
            "type": "string"
          },
          "startConcept": {
            "type": "string",
            "pattern": "^\\/$|^((\\/[^\\/]+)+\\/?)$"
          },
          "startModifier": {
            "type": "string"
          },
          "subGroupDefinitions": {
            "type": "array",
            "maxItems": 4,
            "items": {
              "type": "object",
              "properties": {
                "groupName": {
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "panels": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/panel"
                  }
                }
              }
            }
          },
          "timeGranularity": {
            "type": "string",
            "default": "day",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "timeLimit": {
            "type": "integer",
            "minimum": 1
          },
          "userPublicKey": {
            "type": "string",
            "pattern": "^[\\w=-]+$"
          }
        }
      }
    }
  },
  "responses": {
    "badRequestResponse": {
      "description": "Bad user input in request.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "conflictResponse": {
      "description": "Conflict with resource's state.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "errorResponse": {
      "description": "Error response.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "exploreQueryResponse": {
      "description": "MedCo-Explore query response.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "query": {
            "$ref": "#/definitions/exploreQuery"
          },
          "result": {
            "$ref": "#/definitions/exploreQueryResultElement"
          }
        }
      }
    },
    "exploreSearchConceptChildrenResponse": {
      "description": "MedCo-Explore search concept children query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchConceptChildren"
          }
        }
      }
    },
    "exploreSearchConceptInfoResponse": {
      "description": "MedCo-Explore search concept info query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchConceptInfo"
          }
        }
      }
    },
    "exploreSearchModifierChildrenResponse": {
      "description": "MedCo-Explore search modifier children query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchModifierChildren"
          }
        }
      }
    },
    "exploreSearchModifierInfoResponse": {
      "description": "MedCo-Explore search modifier info query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchModifierInfo"
          }
        }
      }
    },
    "getCohortsResponse": {
      "description": "Queried cohorts",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "cohortId": {
              "type": "integer"
            },
            "cohortName": {
              "type": "string"
            },
            "creationDate": {
              "type": "string"
            },
            "queryId": {
              "type": "integer"
            },
            "updateDate": {
              "type": "string"
            }
          }
        }
      }
    },
    "networkMetadataResponse": {
      "description": "Network metadata (public key and nodes list).",
      "schema": {
        "type": "object",
        "required": [
          "nodeIndex"
        ],
        "properties": {
          "nodeIndex": {
            "type": "integer"
          },
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "index"
              ],
              "properties": {
                "index": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          },
          "public-key": {
            "description": "Aggregated public key of the collective authority.",
            "type": "string"
          }
        }
      }
    },
    "notFoundResponse": {
      "description": "Not found.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "survivalAnalysisResponse": {
      "description": "Queried survival analysis",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "groupID": {
                  "type": "string"
                },
                "groupResults": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "object",
                        "properties": {
                          "censoringevent": {
                            "type": "string"
                          },
                          "eventofinterest": {
                            "type": "string"
                          }
                        }
                      },
                      "timepoint": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "initialCount": {
                  "type": "string"
                }
              }
            }
          },
          "timers": {
            "$ref": "#/definitions/timers"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "medco-jwt": {
      "description": "MedCo JWT token.",
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://medco-demo.epfl.ch/auth"
    }
  },
  "security": [
    {
      "medco-jwt": []
    }
  ],
  "tags": [
    {
      "description": "MedCo Network API",
      "name": "medco-network"
    },
    {
      "description": "MedCo Node API",
      "name": "medco-node"
    },
    {
      "description": "Genomic Annotations Query API",
      "name": "genomic-annotations"
    },
    {
      "description": "Survival analysis API",
      "name": "survival-analysis"
    }
  ],
  "externalDocs": {
    "description": "MedCo Technical Documentation",
    "url": "https://medco.epfl.ch/documentation"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API of the MedCo connector, that orchestrates the query at the MedCo node and provides information about the MedCo network.",
    "title": "MedCo Connector",
    "contact": {
      "email": "medco@epfl.ch"
    },
    "license": {
      "name": "EULA",
      "url": "https://raw.githubusercontent.com/ldsec/medco-connector/master/LICENSE"
    },
    "version": "1.0.0"
  },
  "basePath": "/medco",
  "paths": {
    "/genomic-annotations/{annotation}": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-genomic-annotations"
            ]
          }
        ],
        "tags": [
          "genomic-annotations"
        ],
        "summary": "Get genomic annotations values.",
        "operationId": "getValues",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Genomic annotation name.",
            "name": "annotation",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 255,
            "type": "string",
            "description": "Genomic annotation value.",
            "name": "value",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "Limits the number of records retrieved.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Queried annotation values.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Annotation not found."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/genomic-annotations/{annotation}/{value}": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-genomic-annotations"
            ]
          }
        ],
        "tags": [
          "genomic-annotations"
        ],
        "summary": "Get variants corresponding to a genomic annotation value.",
        "operationId": "getVariants",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Genomic annotation name.",
            "name": "annotation",
            "in": "path",
            "required": true
          },
          {
            "minLength": 1,
            "type": "string",
            "description": "Genomic annotation value.",
            "name": "value",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "heterozygous",
                "homozygous",
                "unknown"
              ],
              "type": "string"
            },
            "description": "Genomic annotation zygosity, if null defaults to all.",
            "name": "zygosity",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Request pre-encrypted variant identifiers (defaults to true).",
            "name": "encrypted",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Queried variants.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Annotation or annotation value not found."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/network": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-network"
            ]
          }
        ],
        "tags": [
          "medco-network"
        ],
        "summary": "Get network metadata.",
        "operationId": "getMetadata",
        "responses": {
          "200": {
            "description": "Network metadata (public key and nodes list).",
            "schema": {
              "type": "object",
              "required": [
                "nodeIndex"
              ],
              "properties": {
                "nodeIndex": {
                  "type": "integer"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NodesItems0"
                  }
                },
                "public-key": {
                  "description": "Aggregated public key of the collective authority.",
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/analysis/survival/query": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-survival-analysis"
            ]
          }
        ],
        "tags": [
          "survival-analysis"
        ],
        "summary": "Send a query to run a survival analysis",
        "operationId": "survivalAnalysis",
        "parameters": [
          {
            "description": "User public key, patient list and time codes strings for the survival analysis",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "ID",
                "userPublicKey",
                "cohortName",
                "timeLimit",
                "timeGranularity",
                "startConcept",
                "startModifier",
                "endConcept",
                "endModifier"
              ],
              "properties": {
                "ID": {
                  "type": "string",
                  "pattern": "^[\\w:-]+$"
                },
                "cohortName": {
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "endConcept": {
                  "type": "string",
                  "pattern": "^\\/$|^((\\/[^\\/]+)+\\/?)$"
                },
                "endModifier": {
                  "type": "string"
                },
                "startConcept": {
                  "type": "string",
                  "pattern": "^\\/$|^((\\/[^\\/]+)+\\/?)$"
                },
                "startModifier": {
                  "type": "string"
                },
                "subGroupDefinitions": {
                  "type": "array",
                  "maxItems": 4,
                  "items": {
                    "$ref": "#/definitions/SubGroupDefinitionsItems0"
                  }
                },
                "timeGranularity": {
                  "type": "string",
                  "default": "day",
                  "enum": [
                    "day",
                    "week",
                    "month",
                    "year"
                  ]
                },
                "timeLimit": {
                  "type": "integer",
                  "minimum": 1
                },
                "userPublicKey": {
                  "type": "string",
                  "pattern": "^[\\w=-]+$"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Queried survival analysis",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ResultsItems0"
                  }
                },
                "timers": {
                  "$ref": "#/definitions/timers"
                }
              }
            }
          },
          "400": {
            "description": "Bad user input in request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/cohorts": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Retrieve cohort names and patient set IDs",
        "operationId": "getCohorts",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "Limits the number of records retrieved. If the provided value is 0, there is no limit.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Queried cohorts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetCohortsOKBodyItems0"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/cohorts/{name}": {
      "put": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Update a cohort",
        "operationId": "putCohorts",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Name of the cohort to update",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "description": "Cohort that has been updated or created",
            "name": "cohortRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "patientSetID",
                "creationDate",
                "updateDate"
              ],
              "properties": {
                "creationDate": {
                  "type": "string"
                },
                "patientSetID": {
                  "type": "integer"
                },
                "updateDate": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated cohort"
          },
          "400": {
            "description": "Bad user input in request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with resource's state.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Add a new cohort",
        "operationId": "postCohorts",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Name of the cohort to update",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "description": "Cohort that has been updated or created",
            "name": "cohortRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "patientSetID",
                "creationDate",
                "updateDate"
              ],
              "properties": {
                "creationDate": {
                  "type": "string"
                },
                "patientSetID": {
                  "type": "integer"
                },
                "updateDate": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated cohort"
          },
          "400": {
            "description": "Bad user input in request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with resource's state.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Delete a cohort if it exists",
        "operationId": "deleteCohorts",
        "parameters": [
          {
            "pattern": "^\\w+$",
            "type": "string",
            "description": "Name of the cohort to delete",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted cohort"
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/query": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "MedCo-Explore query to the node.",
        "operationId": "exploreQuery",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "description": "Request synchronous query (defaults to true).",
            "name": "sync",
            "in": "query"
          },
          {
            "description": "MedCo-Explore query request.",
            "name": "queryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^[\\w:-]+$"
                },
                "query": {
                  "$ref": "#/definitions/exploreQuery"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MedCo-Explore query response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "query": {
                  "$ref": "#/definitions/exploreQuery"
                },
                "result": {
                  "$ref": "#/definitions/exploreQueryResultElement"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/query/{queryId}": {
      "get": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Get status and result of a MedCo-Explore query.",
        "operationId": "getExploreQuery",
        "parameters": [
          {
            "type": "string",
            "description": "Query ID",
            "name": "queryId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "MedCo-Explore query response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "query": {
                  "$ref": "#/definitions/exploreQuery"
                },
                "result": {
                  "$ref": "#/definitions/exploreQueryResultElement"
                }
              }
            }
          },
          "404": {
            "description": "Query ID not found."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/search/concept-children": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the concept children (both concepts and modifiers)",
        "operationId": "exploreSearchConceptChildren",
        "parameters": [
          {
            "description": "MedCo-Explore ontology search concept children request.",
            "name": "searchConceptChildrenRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exploreSearchConceptChildren"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MedCo-Explore search concept children query response.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/exploreSearchResultElement"
                  }
                },
                "search": {
                  "$ref": "#/definitions/exploreSearchConceptChildren"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/search/concept-info": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the concept info",
        "operationId": "exploreSearchConceptInfo",
        "parameters": [
          {
            "description": "MedCo-Explore ontology search concept info request.",
            "name": "searchConceptInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exploreSearchConceptInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MedCo-Explore search concept info query response.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/exploreSearchResultElement"
                  }
                },
                "search": {
                  "$ref": "#/definitions/exploreSearchConceptInfo"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/search/modifier-children": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the modifier children",
        "operationId": "exploreSearchModifierChildren",
        "parameters": [
          {
            "description": "MedCo-Explore ontology search modifier children request.",
            "name": "searchModifierChildrenRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exploreSearchModifierChildren"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MedCo-Explore search modifier children query response.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/exploreSearchResultElement"
                  }
                },
                "search": {
                  "$ref": "#/definitions/exploreSearchModifierChildren"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/node/explore/search/modifier-info": {
      "post": {
        "security": [
          {
            "medco-jwt": [
              "medco-explore"
            ]
          }
        ],
        "tags": [
          "medco-node"
        ],
        "summary": "Returns the modifier info",
        "operationId": "exploreSearchModifierInfo",
        "parameters": [
          {
            "description": "MedCo-Explore ontology search modifier info request.",
            "name": "searchModifierInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exploreSearchModifierInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MedCo-Explore search modifier info query response.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/exploreSearchResultElement"
                  }
                },
                "search": {
                  "$ref": "#/definitions/exploreSearchModifierInfo"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ExploreSearchResultElementMedcoEncryption": {
      "type": "object",
      "required": [
        "encrypted",
        "id"
      ],
      "properties": {
        "childrenIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "encrypted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GetCohortsOKBodyItems0": {
      "type": "object",
      "properties": {
        "cohortId": {
          "type": "integer"
        },
        "cohortName": {
          "type": "string"
        },
        "creationDate": {
          "type": "string"
        },
        "queryId": {
          "type": "integer"
        },
        "updateDate": {
          "type": "string"
        }
      }
    },
    "MetadataxmlValueMetadata": {
      "type": "object",
      "properties": {
        "ChildrenEncryptIDs": {
          "type": "string"
        },
        "CreationDateTime": {
          "type": "string"
        },
        "DataType": {
          "type": "string"
        },
        "EncryptedType": {
          "type": "string"
        },
        "EnumValues": {
          "type": "string"
        },
        "Flagstouse": {
          "type": "string"
        },
        "NodeEncryptID": {
          "type": "string"
        },
        "Oktousevalues": {
          "type": "string"
        },
        "TestID": {
          "type": "string"
        },
        "TestName": {
          "type": "string"
        },
        "UnitValues": {
          "$ref": "#/definitions/UnitValues"
        },
        "Version": {
          "type": "string"
        }
      }
    },
    "NodesItems0": {
      "type": "object",
      "required": [
        "index"
      ],
      "properties": {
        "index": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "PanelItemsItems0": {
      "type": "object",
      "required": [
        "encrypted",
        "queryTerm"
      ],
      "properties": {
        "constrainByValue": {
          "$ref": "#/definitions/constrainByValue"
        },
        "encrypted": {
          "type": "boolean"
        },
        "modifier": {
          "type": "object",
          "required": [
            "appliedPath",
            "modifierKey"
          ],
          "properties": {
            "appliedPath": {
              "type": "string",
              "pattern": "^((\\/[^\\/]+)+\\/%?)$"
            },
            "constrainByValue": {
              "$ref": "#/definitions/constrainByValue"
            },
            "modifierKey": {
              "type": "string",
              "pattern": "^((\\/[^\\/]+)+\\/)$"
            }
          }
        },
        "queryTerm": {
          "type": "string",
          "pattern": "^([\\w=-]+)$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "PanelItemsItems0Modifier": {
      "type": "object",
      "required": [
        "appliedPath",
        "modifierKey"
      ],
      "properties": {
        "appliedPath": {
          "type": "string",
          "pattern": "^((\\/[^\\/]+)+\\/%?)$"
        },
        "constrainByValue": {
          "$ref": "#/definitions/constrainByValue"
        },
        "modifierKey": {
          "type": "string",
          "pattern": "^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "ResultsItems0": {
      "type": "object",
      "properties": {
        "groupID": {
          "type": "string"
        },
        "groupResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultsItems0GroupResultsItems0"
          }
        },
        "initialCount": {
          "type": "string"
        }
      }
    },
    "ResultsItems0GroupResultsItems0": {
      "type": "object",
      "properties": {
        "events": {
          "type": "object",
          "properties": {
            "censoringevent": {
              "type": "string"
            },
            "eventofinterest": {
              "type": "string"
            }
          }
        },
        "timepoint": {
          "type": "integer"
        }
      }
    },
    "ResultsItems0GroupResultsItems0Events": {
      "type": "object",
      "properties": {
        "censoringevent": {
          "type": "string"
        },
        "eventofinterest": {
          "type": "string"
        }
      }
    },
    "SubGroupDefinitionsItems0": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "pattern": "^\\w+$"
        },
        "panels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/panel"
          }
        }
      }
    },
    "TimersItems0": {
      "type": "object",
      "required": [
        "milliseconds"
      ],
      "properties": {
        "milliseconds": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UnitValues": {
      "type": "object",
      "properties": {
        "ConvertingUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnitValuesConvertingUnitsItems0"
          }
        },
        "EqualUnits": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ExcludingUnits": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NormalUnits": {
          "type": "string"
        }
      }
    },
    "UnitValuesConvertingUnitsItems0": {
      "type": "object",
      "properties": {
        "MultiplyingFactor": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        }
      }
    },
    "UserAuthorizations": {
      "type": "object",
      "properties": {
        "exploreQuery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exploreQueryType"
          }
        },
        "restApi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/restApiAuthorization"
          }
        }
      }
    },
    "constrainByValue": {
      "type": "object",
      "required": [
        "operator",
        "value"
      ],
      "properties": {
        "operator": {
          "description": "EQ: equals NE: not equals GT: greater than GE: greater than or equal LT: less than LE: less than or equal IN: contained in BETWEEN: between\n",
          "type": "string",
          "enum": [
            "EQ",
            "NE",
            "GT",
            "GE",
            "LT",
            "LE",
            "IN",
            "BETWEEN"
          ]
        },
        "value": {
          "type": "string"
        }
      }
    },
    "exploreQuery": {
      "description": "MedCo-Explore query",
      "properties": {
        "panels": {
          "description": "i2b2 panels (linked by an AND)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/panel"
          }
        },
        "queryTiming": {
          "$ref": "#/definitions/timing"
        },
        "userPublicKey": {
          "type": "string",
          "pattern": "^[\\w=-]+$"
        }
      }
    },
    "exploreQueryResultElement": {
      "type": "object",
      "properties": {
        "encryptedCount": {
          "type": "string"
        },
        "encryptedPatientList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "patientSetID": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": [
            "queued",
            "pending",
            "error",
            "available"
          ]
        },
        "timers": {
          "$ref": "#/definitions/timers"
        }
      }
    },
    "exploreQueryType": {
      "type": "string",
      "enum": [
        "patient_list",
        "count_per_site",
        "count_per_site_obfuscated",
        "count_per_site_shuffled",
        "count_per_site_shuffled_obfuscated",
        "count_global",
        "count_global_obfuscated"
      ]
    },
    "exploreSearchConceptChildren": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchConceptInfo": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchModifierChildren": {
      "type": "object",
      "required": [
        "path",
        "appliedPath",
        "appliedConcept"
      ],
      "properties": {
        "appliedConcept": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        },
        "appliedPath": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/%?)$"
        },
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchModifierInfo": {
      "type": "object",
      "required": [
        "path",
        "appliedPath"
      ],
      "properties": {
        "appliedPath": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/%?)$"
        },
        "path": {
          "type": "string",
          "pattern": "^\\/$|^((\\/[^\\/]+)+\\/)$"
        }
      }
    },
    "exploreSearchResultElement": {
      "type": "object",
      "required": [
        "leaf"
      ],
      "properties": {
        "appliedPath": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "leaf": {
          "type": "boolean"
        },
        "medcoEncryption": {
          "type": "object",
          "required": [
            "encrypted",
            "id"
          ],
          "properties": {
            "childrenIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "encrypted": {
              "type": "boolean"
            },
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/metadataxml"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "concept",
            "concept_container",
            "concept_folder",
            "modifier",
            "modifier_container",
            "modifier_folder",
            "genomic_annotation"
          ]
        }
      }
    },
    "metadataxml": {
      "type": "object",
      "properties": {
        "ValueMetadata": {
          "type": "object",
          "properties": {
            "ChildrenEncryptIDs": {
              "type": "string"
            },
            "CreationDateTime": {
              "type": "string"
            },
            "DataType": {
              "type": "string"
            },
            "EncryptedType": {
              "type": "string"
            },
            "EnumValues": {
              "type": "string"
            },
            "Flagstouse": {
              "type": "string"
            },
            "NodeEncryptID": {
              "type": "string"
            },
            "Oktousevalues": {
              "type": "string"
            },
            "TestID": {
              "type": "string"
            },
            "TestName": {
              "type": "string"
            },
            "UnitValues": {
              "$ref": "#/definitions/UnitValues"
            },
            "Version": {
              "type": "string"
            }
          }
        }
      }
    },
    "panel": {
      "type": "object",
      "required": [
        "not"
      ],
      "properties": {
        "items": {
          "description": "i2b2 items (linked by an OR)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PanelItemsItems0"
          }
        },
        "not": {
          "description": "exclude the i2b2 panel",
          "type": "boolean"
        },
        "panelTiming": {
          "$ref": "#/definitions/timing"
        }
      }
    },
    "restApiAuthorization": {
      "type": "string",
      "enum": [
        "medco-network",
        "medco-explore",
        "medco-genomic-annotations",
        "medco-survival-analysis"
      ]
    },
    "timers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TimersItems0"
      }
    },
    "timing": {
      "type": "string",
      "default": "any",
      "enum": [
        "any",
        "samevisit",
        "sameinstancenum"
      ]
    },
    "user": {
      "type": "object",
      "properties": {
        "authorizations": {
          "type": "object",
          "properties": {
            "exploreQuery": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exploreQueryType"
              }
            },
            "restApi": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/restApiAuthorization"
              }
            }
          }
        },
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "cohortsRequest": {
      "description": "Cohort that has been updated or created",
      "name": "cohortRequest",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "patientSetID",
          "creationDate",
          "updateDate"
        ],
        "properties": {
          "creationDate": {
            "type": "string"
          },
          "patientSetID": {
            "type": "integer"
          },
          "updateDate": {
            "type": "string"
          }
        }
      }
    },
    "exploreQueryRequest": {
      "description": "MedCo-Explore query request.",
      "name": "queryRequest",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[\\w:-]+$"
          },
          "query": {
            "$ref": "#/definitions/exploreQuery"
          }
        }
      }
    },
    "exploreSearchConceptChildrenRequest": {
      "description": "MedCo-Explore ontology search concept children request.",
      "name": "searchConceptChildrenRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchConceptChildren"
      }
    },
    "exploreSearchConceptInfoRequest": {
      "description": "MedCo-Explore ontology search concept info request.",
      "name": "searchConceptInfoRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchConceptInfo"
      }
    },
    "exploreSearchModifierChildrenRequest": {
      "description": "MedCo-Explore ontology search modifier children request.",
      "name": "searchModifierChildrenRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchModifierChildren"
      }
    },
    "exploreSearchModifierInfoRequest": {
      "description": "MedCo-Explore ontology search modifier info request.",
      "name": "searchModifierInfoRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/exploreSearchModifierInfo"
      }
    },
    "survivalAnalysisRequest": {
      "description": "User public key, patient list and time codes strings for the survival analysis",
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "ID",
          "userPublicKey",
          "cohortName",
          "timeLimit",
          "timeGranularity",
          "startConcept",
          "startModifier",
          "endConcept",
          "endModifier"
        ],
        "properties": {
          "ID": {
            "type": "string",
            "pattern": "^[\\w:-]+$"
          },
          "cohortName": {
            "type": "string",
            "pattern": "^\\w+$"
          },
          "endConcept": {
            "type": "string",
            "pattern": "^\\/$|^((\\/[^\\/]+)+\\/?)$"
          },
          "endModifier": {
            "type": "string"
          },
          "startConcept": {
            "type": "string",
            "pattern": "^\\/$|^((\\/[^\\/]+)+\\/?)$"
          },
          "startModifier": {
            "type": "string"
          },
          "subGroupDefinitions": {
            "type": "array",
            "maxItems": 4,
            "items": {
              "type": "object",
              "properties": {
                "groupName": {
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "panels": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/panel"
                  }
                }
              }
            }
          },
          "timeGranularity": {
            "type": "string",
            "default": "day",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "timeLimit": {
            "type": "integer",
            "minimum": 1
          },
          "userPublicKey": {
            "type": "string",
            "pattern": "^[\\w=-]+$"
          }
        }
      }
    }
  },
  "responses": {
    "badRequestResponse": {
      "description": "Bad user input in request.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "conflictResponse": {
      "description": "Conflict with resource's state.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "errorResponse": {
      "description": "Error response.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "exploreQueryResponse": {
      "description": "MedCo-Explore query response.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "query": {
            "$ref": "#/definitions/exploreQuery"
          },
          "result": {
            "$ref": "#/definitions/exploreQueryResultElement"
          }
        }
      }
    },
    "exploreSearchConceptChildrenResponse": {
      "description": "MedCo-Explore search concept children query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchConceptChildren"
          }
        }
      }
    },
    "exploreSearchConceptInfoResponse": {
      "description": "MedCo-Explore search concept info query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchConceptInfo"
          }
        }
      }
    },
    "exploreSearchModifierChildrenResponse": {
      "description": "MedCo-Explore search modifier children query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchModifierChildren"
          }
        }
      }
    },
    "exploreSearchModifierInfoResponse": {
      "description": "MedCo-Explore search modifier info query response.",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/exploreSearchResultElement"
            }
          },
          "search": {
            "$ref": "#/definitions/exploreSearchModifierInfo"
          }
        }
      }
    },
    "getCohortsResponse": {
      "description": "Queried cohorts",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "cohortId": {
              "type": "integer"
            },
            "cohortName": {
              "type": "string"
            },
            "creationDate": {
              "type": "string"
            },
            "queryId": {
              "type": "integer"
            },
            "updateDate": {
              "type": "string"
            }
          }
        }
      }
    },
    "networkMetadataResponse": {
      "description": "Network metadata (public key and nodes list).",
      "schema": {
        "type": "object",
        "required": [
          "nodeIndex"
        ],
        "properties": {
          "nodeIndex": {
            "type": "integer"
          },
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "index"
              ],
              "properties": {
                "index": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          },
          "public-key": {
            "description": "Aggregated public key of the collective authority.",
            "type": "string"
          }
        }
      }
    },
    "notFoundResponse": {
      "description": "Not found.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "survivalAnalysisResponse": {
      "description": "Queried survival analysis",
      "schema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "groupID": {
                  "type": "string"
                },
                "groupResults": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "object",
                        "properties": {
                          "censoringevent": {
                            "type": "string"
                          },
                          "eventofinterest": {
                            "type": "string"
                          }
                        }
                      },
                      "timepoint": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "initialCount": {
                  "type": "string"
                }
              }
            }
          },
          "timers": {
            "$ref": "#/definitions/timers"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "medco-jwt": {
      "description": "MedCo JWT token.",
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://medco-demo.epfl.ch/auth"
    }
  },
  "security": [
    {
      "medco-jwt": []
    }
  ],
  "tags": [
    {
      "description": "MedCo Network API",
      "name": "medco-network"
    },
    {
      "description": "MedCo Node API",
      "name": "medco-node"
    },
    {
      "description": "Genomic Annotations Query API",
      "name": "genomic-annotations"
    },
    {
      "description": "Survival analysis API",
      "name": "survival-analysis"
    }
  ],
  "externalDocs": {
    "description": "MedCo Technical Documentation",
    "url": "https://medco.epfl.ch/documentation"
  }
}`))
}
