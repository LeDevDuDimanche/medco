// Code generated by go-swagger; DO NOT EDIT.

package medco_node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetExploreQueryOKCode is the HTTP code returned for type GetExploreQueryOK
const GetExploreQueryOKCode int = 200

/*GetExploreQueryOK MedCo-Explore query response.

swagger:response getExploreQueryOK
*/
type GetExploreQueryOK struct {

	/*
	  In: Body
	*/
	Payload *GetExploreQueryOKBody `json:"body,omitempty"`
}

// NewGetExploreQueryOK creates GetExploreQueryOK with default headers values
func NewGetExploreQueryOK() *GetExploreQueryOK {

	return &GetExploreQueryOK{}
}

// WithPayload adds the payload to the get explore query o k response
func (o *GetExploreQueryOK) WithPayload(payload *GetExploreQueryOKBody) *GetExploreQueryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get explore query o k response
func (o *GetExploreQueryOK) SetPayload(payload *GetExploreQueryOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExploreQueryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExploreQueryNotFoundCode is the HTTP code returned for type GetExploreQueryNotFound
const GetExploreQueryNotFoundCode int = 404

/*GetExploreQueryNotFound Query ID not found.

swagger:response getExploreQueryNotFound
*/
type GetExploreQueryNotFound struct {
}

// NewGetExploreQueryNotFound creates GetExploreQueryNotFound with default headers values
func NewGetExploreQueryNotFound() *GetExploreQueryNotFound {

	return &GetExploreQueryNotFound{}
}

// WriteResponse to the client
func (o *GetExploreQueryNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetExploreQueryDefault Error response.

swagger:response getExploreQueryDefault
*/
type GetExploreQueryDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *GetExploreQueryDefaultBody `json:"body,omitempty"`
}

// NewGetExploreQueryDefault creates GetExploreQueryDefault with default headers values
func NewGetExploreQueryDefault(code int) *GetExploreQueryDefault {
	if code <= 0 {
		code = 500
	}

	return &GetExploreQueryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get explore query default response
func (o *GetExploreQueryDefault) WithStatusCode(code int) *GetExploreQueryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get explore query default response
func (o *GetExploreQueryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get explore query default response
func (o *GetExploreQueryDefault) WithPayload(payload *GetExploreQueryDefaultBody) *GetExploreQueryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get explore query default response
func (o *GetExploreQueryDefault) SetPayload(payload *GetExploreQueryDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExploreQueryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
