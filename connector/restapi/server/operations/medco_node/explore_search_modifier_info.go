// Code generated by go-swagger; DO NOT EDIT.

package medco_node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ldsec/medco/connector/restapi/models"
)

// ExploreSearchModifierInfoHandlerFunc turns a function with the right signature into a explore search modifier info handler
type ExploreSearchModifierInfoHandlerFunc func(ExploreSearchModifierInfoParams, *models.User) middleware.Responder

// Handle executing the request and returning a response
func (fn ExploreSearchModifierInfoHandlerFunc) Handle(params ExploreSearchModifierInfoParams, principal *models.User) middleware.Responder {
	return fn(params, principal)
}

// ExploreSearchModifierInfoHandler interface for that can handle valid explore search modifier info params
type ExploreSearchModifierInfoHandler interface {
	Handle(ExploreSearchModifierInfoParams, *models.User) middleware.Responder
}

// NewExploreSearchModifierInfo creates a new http.Handler for the explore search modifier info operation
func NewExploreSearchModifierInfo(ctx *middleware.Context, handler ExploreSearchModifierInfoHandler) *ExploreSearchModifierInfo {
	return &ExploreSearchModifierInfo{Context: ctx, Handler: handler}
}

/*ExploreSearchModifierInfo swagger:route POST /node/explore/search/modifier-info medco-node exploreSearchModifierInfo

Returns the modifier info

*/
type ExploreSearchModifierInfo struct {
	Context *middleware.Context
	Handler ExploreSearchModifierInfoHandler
}

func (o *ExploreSearchModifierInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewExploreSearchModifierInfoParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal *models.User
	if uprinc != nil {
		principal = uprinc.(*models.User) // this is really a models.User, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ExploreSearchModifierInfoDefaultBody explore search modifier info default body
//
// swagger:model ExploreSearchModifierInfoDefaultBody
type ExploreSearchModifierInfoDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this explore search modifier info default body
func (o *ExploreSearchModifierInfoDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExploreSearchModifierInfoDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreSearchModifierInfoDefaultBody) UnmarshalBinary(b []byte) error {
	var res ExploreSearchModifierInfoDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// ExploreSearchModifierInfoOKBody explore search modifier info o k body
//
// swagger:model ExploreSearchModifierInfoOKBody
type ExploreSearchModifierInfoOKBody struct {

	// results
	Results []*models.ExploreSearchResultElement `json:"results"`

	// search
	Search *models.ExploreSearchModifierInfo `json:"search,omitempty"`
}

// Validate validates this explore search modifier info o k body
func (o *ExploreSearchModifierInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResults(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSearch(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ExploreSearchModifierInfoOKBody) validateResults(formats strfmt.Registry) error {

	if swag.IsZero(o.Results) { // not required
		return nil
	}

	for i := 0; i < len(o.Results); i++ {
		if swag.IsZero(o.Results[i]) { // not required
			continue
		}

		if o.Results[i] != nil {
			if err := o.Results[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("exploreSearchModifierInfoOK" + "." + "results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ExploreSearchModifierInfoOKBody) validateSearch(formats strfmt.Registry) error {

	if swag.IsZero(o.Search) { // not required
		return nil
	}

	if o.Search != nil {
		if err := o.Search.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("exploreSearchModifierInfoOK" + "." + "search")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ExploreSearchModifierInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExploreSearchModifierInfoOKBody) UnmarshalBinary(b []byte) error {
	var res ExploreSearchModifierInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
