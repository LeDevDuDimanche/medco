name: CI
on:
  push:
  pull_request:

jobs:
  go-tests:
    name: Code beautification, unit tests and code coverage
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.14'
      - run: go version

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run go fmt and lint
        run: |
          make test_go_fmt
          make test_go_lint

      - name: Get test data
        run: make download_test_data

      - name: Run go test
        run: make test_codecov_unit

      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=profile.cov -service=github

  e2e-tests:
    name: End-to-end tests
    runs-on: ubuntu-latest

    env:
      MEDCO_DB_NUMBER: 9 # the number of databases used in the profile that will be tested
      MEDCO_DB_HOST: localhost
      MEDCO_DB_PORT: 5432
      MEDCO_DB_USER: postgres
      MEDCO_DB_PASSWORD: postgres
      MEDCO_DB_NAME: postgres
      MEDCO_USER_USERNAME: test
      MEDCO_USER_PASSWORD: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker images
        run: make docker_images_build_dev

      - name: Get test data
        run: make download_test_data

      - name: Start deployment and wait for it to be ready
        run: |
          docker-compose -f deployments/dev-local-3nodes/docker-compose.yml up -d
          bash test/wait_for_startup.sh $MEDCO_DB_NUMBER $MEDCO_DB_HOST $MEDCO_DB_PORT $MEDCO_DB_USER $MEDCO_DB_PASSWORD $MEDCO_DB_NAME

      - name: Run unit tests depending on deployment without a loading performed
        run: make test_codecov_e2e_preloading

      - name: Run e2e queries before loading
        run: bash test/test_cli_preloading.sh $MEDCO_USER_USERNAME $MEDCO_USER_PASSWORD
        
      - name: Load data in deployment
        run: make load_test_data

      - name: Run unit tests depending on deployment with loadings performed
        run: make test_codecov_e2e_postloading

      - name: Run e2e queries after loading
        run: bash test/test_cli_postloading.sh $MEDCO_USER_USERNAME $MEDCO_USER_PASSWORD
