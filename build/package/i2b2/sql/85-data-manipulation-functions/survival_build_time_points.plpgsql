
-- pl/pgsql function that implement the construction of relative times for survival analysis

SET search_path TO i2b2demodata_i2b2;
CREATE FUNCTION build_timepoints(patient_list integer[], start_code varchar, start_modifier_code varchar, end_code varchar, end_modifier_code varchar, time_limit integer) 
RETURNS TABLE (timepoint integer, event_count integer, censoring_count integer)
AS $$
DECLARE

BEGIN
SET search_path TO i2b2demodata_i2b2;
  
    -- those query results are used several times, this is why there are TEMP TABLEs
    CREATE TEMP TABLE start_dates AS (SELECT patient_num,start_date
                      FROM observation_fact
                      WHERE concept_cd = start_code AND modifier_cd = start_modifier_code AND patient_num = ANY(patient_list));
    
    CREATE TEMP TABLE end_dates AS (SELECT patient_num,end_date
                      FROM observation_fact
                      WHERE concept_cd = end_code AND modifier_cd = end_modifier_code AND patient_num = ANY(patient_list));
    
    RETURN QUERY

        SELECT COALESCE(xx.timepoint::integer,yy.timepoint::integer) AS timepoint , COALESCE(xx.event_count::integer,0) AS event_count, COALESCE(yy.censoring_count::integer,0) AS censoring_count FROM (
            
            --compute relative times for patient having both start and end event
            SELECT DATE_PART('day',end_date::timestamp - start_date::timestamp) AS timepoint, COUNT(*) AS event_count
            FROM start_dates
            INNER JOIN end_dates
            ON start_dates.patient_num = end_dates.patient_num
            GROUP BY timepoint
        ) AS xx  FULL JOIN (

            --compute relative times for patient having both start event, but missing end event
            SELECT * FROM (SELECT DATE_PART('day', end_date::timestamp - start_date::timestamp) AS timepoint, COUNT(*) AS censoring_count
                FROM (

                    --the date of censoring event is the most recent date of any events
                    SELECT patient_num, MAX(end_date) AS end_date
                    FROM i2b2demodata_i2b2.observation_fact
                    WHERE patient_num = ANY(patient_list) AND patient_num NOT IN (SELECT patient_num FROM end_dates)
                    GROUP BY patient_num
                ) AS x
                INNER JOIN  start_dates
                ON x.patient_num = start_dates.patient_num
                GROUP BY timepoint) AS z
                
            --user-defined maximume relative time
            WHERE z.timepoint < time_limit
        ) AS yy
        ON xx.timepoint = yy.timepoint;

    DROP TABLE start_dates;
    DROP TABLE end_dates;



END;
$$ LANGUAGE plpgsql